name: Node.js CI && Publish Docker image

on: [ push ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 12.x, 14.x, 15.x ]

    steps:
      - uses: actions/checkout@v2
      - uses: c-hive/gha-yarn-cache@v1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
        env:
          CI: true

      - name: Install packages
        env:
          CI: true
        run: yarn install --frozen-lockfile

      - name: Run tests
        env:
          CI: true
        run: yarn test

      - name: Build frontend
        env:
          CI: false
        run: yarn build

      - name: Build SSR
        env:
          CI: false
        run: yarn build:ssr

      - name: Run SSR
        env:
          CI: true
        run: yarn start

  push_to_registry:
    needs: build

    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    if: ${{ GITHUB_REF#refs/heads/ == 'master' }}
    steps:

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_REPOSITORY }}:movies-react-app-latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            APP_API_URL=${{ secrets.APP_API_URL }}